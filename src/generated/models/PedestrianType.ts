/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * If set to blind, enables additional route instructions which are helpful for blind users. These include announcing street crossings, stairs, bridges, tunnels, gates, and bollards passed on the route. If set to wheelchair, the walking speed and step penalty are adjusted for wheelchair users.
 * @export
 */
export const PedestrianType = {
  Foot: "foot",
  Blind: "blind",
  Wheelchair: "wheelchair",
} as const;
export type PedestrianType =
  (typeof PedestrianType)[keyof typeof PedestrianType];

export function instanceOfPedestrianType(value: any): boolean {
  for (const key in PedestrianType) {
    if (Object.prototype.hasOwnProperty.call(PedestrianType, key)) {
      if (PedestrianType[key as keyof typeof PedestrianType] === value) {
        return true;
      }
    }
  }
  return false;
}

export function PedestrianTypeFromJSON(json: any): PedestrianType {
  return PedestrianTypeFromJSONTyped(json, false);
}

export function PedestrianTypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): PedestrianType {
  return json as PedestrianType;
}

export function PedestrianTypeToJSON(value?: PedestrianType | null): any {
  return value as any;
}

export function PedestrianTypeToJSONTyped(
  value: any,
  ignoreDiscriminator: boolean,
): PedestrianType {
  return value as PedestrianType;
}
