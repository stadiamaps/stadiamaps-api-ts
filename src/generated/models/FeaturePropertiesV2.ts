/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.3.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { Point } from "./Point";
import {
  PointFromJSON,
  PointFromJSONTyped,
  PointToJSON,
  PointToJSONTyped,
} from "./Point";
import type { FeaturePropertiesV2Properties } from "./FeaturePropertiesV2Properties";
import {
  FeaturePropertiesV2PropertiesFromJSON,
  FeaturePropertiesV2PropertiesFromJSONTyped,
  FeaturePropertiesV2PropertiesToJSON,
  FeaturePropertiesV2PropertiesToJSONTyped,
} from "./FeaturePropertiesV2Properties";

/**
 *
 * @export
 * @interface FeaturePropertiesV2
 */
export interface FeaturePropertiesV2 {
  /**
   *
   * @type {Array<number>}
   * @memberof FeaturePropertiesV2
   */
  bbox?: Array<number> | null;
  /**
   *
   * @type {Point}
   * @memberof FeaturePropertiesV2
   */
  geometry?: Point | null;
  /**
   *
   * @type {FeaturePropertiesV2Properties}
   * @memberof FeaturePropertiesV2
   */
  properties: FeaturePropertiesV2Properties;
  /**
   *
   * @type {string}
   * @memberof FeaturePropertiesV2
   */
  type?: string;
}

/**
 * Check if a given object implements the FeaturePropertiesV2 interface.
 */
export function instanceOfFeaturePropertiesV2(
  value: object,
): value is FeaturePropertiesV2 {
  if (!("properties" in value) || value["properties"] === undefined)
    return false;
  return true;
}

export function FeaturePropertiesV2FromJSON(json: any): FeaturePropertiesV2 {
  return FeaturePropertiesV2FromJSONTyped(json, false);
}

export function FeaturePropertiesV2FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): FeaturePropertiesV2 {
  if (json == null) {
    return json;
  }
  return {
    bbox: json["bbox"] == null ? undefined : json["bbox"],
    geometry:
      json["geometry"] == null ? undefined : PointFromJSON(json["geometry"]),
    properties: FeaturePropertiesV2PropertiesFromJSON(json["properties"]),
    type: json["type"] == null ? undefined : json["type"],
  };
}

export function FeaturePropertiesV2ToJSON(json: any): FeaturePropertiesV2 {
  return FeaturePropertiesV2ToJSONTyped(json, false);
}

export function FeaturePropertiesV2ToJSONTyped(
  value?: FeaturePropertiesV2 | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    bbox: value["bbox"],
    geometry: PointToJSON(value["geometry"]),
    properties: FeaturePropertiesV2PropertiesToJSON(value["properties"]),
    type: value["type"],
  };
}
