/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 8.0.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface OsrmLane
 */
export interface OsrmLane {
  /**
   * A list of indication (e.g. marking on the road) specifying the turn lane. A road can have multiple indications (e.g. an arrow pointing straight and left).
   * @type {Array<string>}
   * @memberof OsrmLane
   */
  indications: Array<OsrmLaneIndicationsEnum>;
  /**
   * True if the lane is a valid choice for the current maneuver.
   * @type {boolean}
   * @memberof OsrmLane
   */
  valid: boolean;
}

/**
 * @export
 */
export const OsrmLaneIndicationsEnum = {
  None: "none",
  Uturn: "uturn",
  SharpRight: "sharp right",
  Right: "right",
  SlightRight: "slight right",
  Straight: "straight",
  SlightLeft: "slight left",
  Left: "left",
  SharpLeft: "sharp left",
} as const;
export type OsrmLaneIndicationsEnum =
  (typeof OsrmLaneIndicationsEnum)[keyof typeof OsrmLaneIndicationsEnum];

/**
 * Check if a given object implements the OsrmLane interface.
 */
export function instanceOfOsrmLane(value: object): value is OsrmLane {
  if (!("indications" in value) || value["indications"] === undefined)
    return false;
  if (!("valid" in value) || value["valid"] === undefined) return false;
  return true;
}

export function OsrmLaneFromJSON(json: any): OsrmLane {
  return OsrmLaneFromJSONTyped(json, false);
}

export function OsrmLaneFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmLane {
  if (json == null) {
    return json;
  }
  return {
    indications: json["indications"],
    valid: json["valid"],
  };
}

export function OsrmLaneToJSON(json: any): OsrmLane {
  return OsrmLaneToJSONTyped(json, false);
}

export function OsrmLaneToJSONTyped(
  value?: OsrmLane | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    indications: value["indications"],
    valid: value["valid"],
  };
}
