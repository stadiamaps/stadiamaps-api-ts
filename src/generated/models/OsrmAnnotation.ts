/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.2.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { OsrmSpeedLimit } from "./OsrmSpeedLimit";
import {
  OsrmSpeedLimitFromJSON,
  OsrmSpeedLimitFromJSONTyped,
  OsrmSpeedLimitToJSON,
  OsrmSpeedLimitToJSONTyped,
} from "./OsrmSpeedLimit";

/**
 *
 * @export
 * @interface OsrmAnnotation
 */
export interface OsrmAnnotation {
  /**
   * The distance, in meters, between each pair of coordinates.
   * @type {Array<number>}
   * @memberof OsrmAnnotation
   */
  distance?: Array<number>;
  /**
   * The duration between each pair of coordinates, in seconds.
   * @type {Array<number>}
   * @memberof OsrmAnnotation
   */
  duration?: Array<number>;
  /**
   *
   * @type {Array<number>}
   * @memberof OsrmAnnotation
   */
  weight?: Array<number>;
  /**
   * The estimated speed of travel between each pair of coordinates in meters/sec.
   * @type {Array<number>}
   * @memberof OsrmAnnotation
   */
  speed?: Array<number>;
  /**
   *
   * @type {Array<OsrmSpeedLimit>}
   * @memberof OsrmAnnotation
   */
  maxspeed?: Array<OsrmSpeedLimit>;
}

/**
 * Check if a given object implements the OsrmAnnotation interface.
 */
export function instanceOfOsrmAnnotation(
  value: object,
): value is OsrmAnnotation {
  return true;
}

export function OsrmAnnotationFromJSON(json: any): OsrmAnnotation {
  return OsrmAnnotationFromJSONTyped(json, false);
}

export function OsrmAnnotationFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmAnnotation {
  if (json == null) {
    return json;
  }
  return {
    distance: json["distance"] == null ? undefined : json["distance"],
    duration: json["duration"] == null ? undefined : json["duration"],
    weight: json["weight"] == null ? undefined : json["weight"],
    speed: json["speed"] == null ? undefined : json["speed"],
    maxspeed:
      json["maxspeed"] == null
        ? undefined
        : (json["maxspeed"] as Array<any>).map(OsrmSpeedLimitFromJSON),
  };
}

export function OsrmAnnotationToJSON(json: any): OsrmAnnotation {
  return OsrmAnnotationToJSONTyped(json, false);
}

export function OsrmAnnotationToJSONTyped(
  value?: OsrmAnnotation | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    distance: value["distance"],
    duration: value["duration"],
    weight: value["weight"],
    speed: value["speed"],
    maxspeed:
      value["maxspeed"] == null
        ? undefined
        : (value["maxspeed"] as Array<any>).map(OsrmSpeedLimitToJSON),
  };
}
