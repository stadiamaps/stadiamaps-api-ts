/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.1.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface GeocodingGeoJSONPropertiesAddendumOsm
 */
export interface GeocodingGeoJSONPropertiesAddendumOsm {
  [key: string]: any | any;
  /**
   *
   * @type {string}
   * @memberof GeocodingGeoJSONPropertiesAddendumOsm
   */
  website?: string;
  /**
   *
   * @type {string}
   * @memberof GeocodingGeoJSONPropertiesAddendumOsm
   */
  wikipedia?: string;
  /**
   *
   * @type {string}
   * @memberof GeocodingGeoJSONPropertiesAddendumOsm
   */
  wikidata?: string;
  /**
   *
   * @type {string}
   * @memberof GeocodingGeoJSONPropertiesAddendumOsm
   */
  phone?: string;
}

/**
 * Check if a given object implements the GeocodingGeoJSONPropertiesAddendumOsm interface.
 */
export function instanceOfGeocodingGeoJSONPropertiesAddendumOsm(
  value: object,
): value is GeocodingGeoJSONPropertiesAddendumOsm {
  return true;
}

export function GeocodingGeoJSONPropertiesAddendumOsmFromJSON(
  json: any,
): GeocodingGeoJSONPropertiesAddendumOsm {
  return GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped(json, false);
}

export function GeocodingGeoJSONPropertiesAddendumOsmFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GeocodingGeoJSONPropertiesAddendumOsm {
  if (json == null) {
    return json;
  }
  return {
    ...json,
    website: json["website"] == null ? undefined : json["website"],
    wikipedia: json["wikipedia"] == null ? undefined : json["wikipedia"],
    wikidata: json["wikidata"] == null ? undefined : json["wikidata"],
    phone: json["phone"] == null ? undefined : json["phone"],
  };
}

export function GeocodingGeoJSONPropertiesAddendumOsmToJSON(
  json: any,
): GeocodingGeoJSONPropertiesAddendumOsm {
  return GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped(json, false);
}

export function GeocodingGeoJSONPropertiesAddendumOsmToJSONTyped(
  value?: GeocodingGeoJSONPropertiesAddendumOsm | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    ...value,
    website: value["website"],
    wikipedia: value["wikipedia"],
    wikidata: value["wikidata"],
    phone: value["phone"],
  };
}
