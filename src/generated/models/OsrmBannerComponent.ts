/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.1.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface OsrmBannerComponent
 */
export interface OsrmBannerComponent {
  /**
   *
   * @type {string}
   * @memberof OsrmBannerComponent
   */
  text?: string;
  /**
   *
   * @type {string}
   * @memberof OsrmBannerComponent
   */
  type?: OsrmBannerComponentTypeEnum;
}

/**
 * @export
 */
export const OsrmBannerComponentTypeEnum = {
  Text: "text",
  Icon: "icon",
  Delimiter: "delimiter",
  ExitNumber: "exit-number",
  Exit: "exit",
  Lane: "lane",
} as const;
export type OsrmBannerComponentTypeEnum =
  (typeof OsrmBannerComponentTypeEnum)[keyof typeof OsrmBannerComponentTypeEnum];

/**
 * Check if a given object implements the OsrmBannerComponent interface.
 */
export function instanceOfOsrmBannerComponent(
  value: object,
): value is OsrmBannerComponent {
  return true;
}

export function OsrmBannerComponentFromJSON(json: any): OsrmBannerComponent {
  return OsrmBannerComponentFromJSONTyped(json, false);
}

export function OsrmBannerComponentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmBannerComponent {
  if (json == null) {
    return json;
  }
  return {
    text: json["text"] == null ? undefined : json["text"],
    type: json["type"] == null ? undefined : json["type"],
  };
}

export function OsrmBannerComponentToJSON(json: any): OsrmBannerComponent {
  return OsrmBannerComponentToJSONTyped(json, false);
}

export function OsrmBannerComponentToJSONTyped(
  value?: OsrmBannerComponent | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    text: value["text"],
    type: value["type"],
  };
}
