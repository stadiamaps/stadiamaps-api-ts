/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.3.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { OsrmWaypoint } from "./OsrmWaypoint";
import {
  OsrmWaypointFromJSON,
  OsrmWaypointFromJSONTyped,
  OsrmWaypointToJSON,
  OsrmWaypointToJSONTyped,
} from "./OsrmWaypoint";
import type { OsrmRoute } from "./OsrmRoute";
import {
  OsrmRouteFromJSON,
  OsrmRouteFromJSONTyped,
  OsrmRouteToJSON,
  OsrmRouteToJSONTyped,
} from "./OsrmRoute";

/**
 *
 * @export
 * @interface OsrmRouteResponse
 */
export interface OsrmRouteResponse {
  /**
   *
   * @type {string}
   * @memberof OsrmRouteResponse
   */
  code: OsrmRouteResponseCodeEnum;
  /**
   *
   * @type {string}
   * @memberof OsrmRouteResponse
   */
  message?: string;
  /**
   *
   * @type {string}
   * @memberof OsrmRouteResponse
   */
  dataVersion?: string;
  /**
   *
   * @type {Array<OsrmWaypoint>}
   * @memberof OsrmRouteResponse
   */
  waypoints?: Array<OsrmWaypoint>;
  /**
   *
   * @type {Array<OsrmRoute>}
   * @memberof OsrmRouteResponse
   */
  routes?: Array<OsrmRoute>;
}

/**
 * @export
 */
export const OsrmRouteResponseCodeEnum = {
  Ok: "Ok",
  InvalidUrl: "InvalidUrl",
  InvalidService: "InvalidService",
  InvalidVersion: "InvalidVersion",
  InvalidOptions: "InvalidOptions",
  InvalidQuery: "InvalidQuery",
  InvalidValue: "InvalidValue",
  NoSegment: "NoSegment",
  TooBig: "TooBig",
  NoRoute: "NoRoute",
  NoTable: "NoTable",
  NotImplemented: "NotImplemented",
  NoTrips: "NoTrips",
} as const;
export type OsrmRouteResponseCodeEnum =
  (typeof OsrmRouteResponseCodeEnum)[keyof typeof OsrmRouteResponseCodeEnum];

/**
 * Check if a given object implements the OsrmRouteResponse interface.
 */
export function instanceOfOsrmRouteResponse(
  value: object,
): value is OsrmRouteResponse {
  if (!("code" in value) || value["code"] === undefined) return false;
  return true;
}

export function OsrmRouteResponseFromJSON(json: any): OsrmRouteResponse {
  return OsrmRouteResponseFromJSONTyped(json, false);
}

export function OsrmRouteResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmRouteResponse {
  if (json == null) {
    return json;
  }
  return {
    code: json["code"],
    message: json["message"] == null ? undefined : json["message"],
    dataVersion:
      json["data_version"] == null ? undefined : json["data_version"],
    waypoints:
      json["waypoints"] == null
        ? undefined
        : (json["waypoints"] as Array<any>).map(OsrmWaypointFromJSON),
    routes:
      json["routes"] == null
        ? undefined
        : (json["routes"] as Array<any>).map(OsrmRouteFromJSON),
  };
}

export function OsrmRouteResponseToJSON(json: any): OsrmRouteResponse {
  return OsrmRouteResponseToJSONTyped(json, false);
}

export function OsrmRouteResponseToJSONTyped(
  value?: OsrmRouteResponse | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    code: value["code"],
    message: value["message"],
    data_version: value["dataVersion"],
    waypoints:
      value["waypoints"] == null
        ? undefined
        : (value["waypoints"] as Array<any>).map(OsrmWaypointToJSON),
    routes:
      value["routes"] == null
        ? undefined
        : (value["routes"] as Array<any>).map(OsrmRouteToJSON),
  };
}
