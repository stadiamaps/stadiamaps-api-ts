/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.1.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 * The speed limit between the pair of coordinates.
 * @export
 * @interface OsrmSpeedLimit
 */
export interface OsrmSpeedLimit {
  /**
   *
   * @type {number}
   * @memberof OsrmSpeedLimit
   */
  speed?: number;
  /**
   * The unit of measure for the speed. Always included if speed is present.
   * @type {string}
   * @memberof OsrmSpeedLimit
   */
  unit?: OsrmSpeedLimitUnitEnum;
  /**
   * True if the speed limit is not known.
   * @type {boolean}
   * @memberof OsrmSpeedLimit
   */
  unknown?: boolean;
  /**
   * True if there is no explicit speed limit (ex: some Autobahn sections)
   * @type {boolean}
   * @memberof OsrmSpeedLimit
   */
  none?: boolean;
}

/**
 * @export
 */
export const OsrmSpeedLimitUnitEnum = {
  KmH: "km/h",
  Mph: "mph",
} as const;
export type OsrmSpeedLimitUnitEnum =
  (typeof OsrmSpeedLimitUnitEnum)[keyof typeof OsrmSpeedLimitUnitEnum];

/**
 * Check if a given object implements the OsrmSpeedLimit interface.
 */
export function instanceOfOsrmSpeedLimit(
  value: object,
): value is OsrmSpeedLimit {
  return true;
}

export function OsrmSpeedLimitFromJSON(json: any): OsrmSpeedLimit {
  return OsrmSpeedLimitFromJSONTyped(json, false);
}

export function OsrmSpeedLimitFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmSpeedLimit {
  if (json == null) {
    return json;
  }
  return {
    speed: json["speed"] == null ? undefined : json["speed"],
    unit: json["unit"] == null ? undefined : json["unit"],
    unknown: json["unknown"] == null ? undefined : json["unknown"],
    none: json["none"] == null ? undefined : json["none"],
  };
}

export function OsrmSpeedLimitToJSON(json: any): OsrmSpeedLimit {
  return OsrmSpeedLimitToJSONTyped(json, false);
}

export function OsrmSpeedLimitToJSONTyped(
  value?: OsrmSpeedLimit | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    speed: value["speed"],
    unit: value["unit"],
    unknown: value["unknown"],
    none: value["none"],
  };
}
