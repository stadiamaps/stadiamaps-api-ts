/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { OsrmViaWaypoint } from "./OsrmViaWaypoint";
import {
  OsrmViaWaypointFromJSON,
  OsrmViaWaypointFromJSONTyped,
  OsrmViaWaypointToJSON,
  OsrmViaWaypointToJSONTyped,
} from "./OsrmViaWaypoint";
import type { OsrmAnnotation } from "./OsrmAnnotation";
import {
  OsrmAnnotationFromJSON,
  OsrmAnnotationFromJSONTyped,
  OsrmAnnotationToJSON,
  OsrmAnnotationToJSONTyped,
} from "./OsrmAnnotation";
import type { OsrmAdmin } from "./OsrmAdmin";
import {
  OsrmAdminFromJSON,
  OsrmAdminFromJSONTyped,
  OsrmAdminToJSON,
  OsrmAdminToJSONTyped,
} from "./OsrmAdmin";
import type { OsrmRouteStep } from "./OsrmRouteStep";
import {
  OsrmRouteStepFromJSON,
  OsrmRouteStepFromJSONTyped,
  OsrmRouteStepToJSON,
  OsrmRouteStepToJSONTyped,
} from "./OsrmRouteStep";

/**
 *
 * @export
 * @interface OsrmRouteLeg
 */
export interface OsrmRouteLeg {
  /**
   * The distance traveled by the route, in meters.
   * @type {number}
   * @memberof OsrmRouteLeg
   */
  distance: number;
  /**
   * The estimated travel time, in number of seconds.
   * @type {number}
   * @memberof OsrmRouteLeg
   */
  duration: number;
  /**
   * The total cost of the leg computed by the routing engine.
   * @type {number}
   * @memberof OsrmRouteLeg
   */
  weight?: number;
  /**
   *
   * @type {string}
   * @memberof OsrmRouteLeg
   */
  summary?: string;
  /**
   *
   * @type {Array<OsrmRouteStep>}
   * @memberof OsrmRouteLeg
   */
  steps: Array<OsrmRouteStep>;
  /**
   *
   * @type {OsrmAnnotation}
   * @memberof OsrmRouteLeg
   */
  annotation?: OsrmAnnotation;
  /**
   * Indicates which waypoints are passed through rather than creating a new leg.
   * @type {Array<OsrmViaWaypoint>}
   * @memberof OsrmRouteLeg
   */
  viaWaypoints?: Array<OsrmViaWaypoint> | null;
  /**
   * Administrative regions visited along the leg.
   * @type {Array<OsrmAdmin>}
   * @memberof OsrmRouteLeg
   */
  admins?: Array<OsrmAdmin>;
}

/**
 * Check if a given object implements the OsrmRouteLeg interface.
 */
export function instanceOfOsrmRouteLeg(value: object): value is OsrmRouteLeg {
  if (!("distance" in value) || value["distance"] === undefined) return false;
  if (!("duration" in value) || value["duration"] === undefined) return false;
  if (!("steps" in value) || value["steps"] === undefined) return false;
  return true;
}

export function OsrmRouteLegFromJSON(json: any): OsrmRouteLeg {
  return OsrmRouteLegFromJSONTyped(json, false);
}

export function OsrmRouteLegFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmRouteLeg {
  if (json == null) {
    return json;
  }
  return {
    distance: json["distance"],
    duration: json["duration"],
    weight: json["weight"] == null ? undefined : json["weight"],
    summary: json["summary"] == null ? undefined : json["summary"],
    steps: (json["steps"] as Array<any>).map(OsrmRouteStepFromJSON),
    annotation:
      json["annotation"] == null
        ? undefined
        : OsrmAnnotationFromJSON(json["annotation"]),
    viaWaypoints:
      json["via_waypoints"] == null
        ? undefined
        : (json["via_waypoints"] as Array<any>).map(OsrmViaWaypointFromJSON),
    admins:
      json["admins"] == null
        ? undefined
        : (json["admins"] as Array<any>).map(OsrmAdminFromJSON),
  };
}

export function OsrmRouteLegToJSON(json: any): OsrmRouteLeg {
  return OsrmRouteLegToJSONTyped(json, false);
}

export function OsrmRouteLegToJSONTyped(
  value?: OsrmRouteLeg | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    distance: value["distance"],
    duration: value["duration"],
    weight: value["weight"],
    summary: value["summary"],
    steps: (value["steps"] as Array<any>).map(OsrmRouteStepToJSON),
    annotation: OsrmAnnotationToJSON(value["annotation"]),
    via_waypoints:
      value["viaWaypoints"] == null
        ? undefined
        : (value["viaWaypoints"] as Array<any>).map(OsrmViaWaypointToJSON),
    admins:
      value["admins"] == null
        ? undefined
        : (value["admins"] as Array<any>).map(OsrmAdminToJSON),
  };
}
