/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.1.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { OsrmRouteLeg } from "./OsrmRouteLeg";
import {
  OsrmRouteLegFromJSON,
  OsrmRouteLegFromJSONTyped,
  OsrmRouteLegToJSON,
  OsrmRouteLegToJSONTyped,
} from "./OsrmRouteLeg";

/**
 *
 * @export
 * @interface OsrmRoute
 */
export interface OsrmRoute {
  /**
   * The distance traveled by the route, in meters.
   * @type {number}
   * @memberof OsrmRoute
   */
  distance: number;
  /**
   * The estimated travel time, in number of seconds.
   * @type {number}
   * @memberof OsrmRoute
   */
  duration: number;
  /**
   * An encoded polyline (https://developers.google.com/maps/documentation/utilities/polylinealgorithm).
   * @type {string}
   * @memberof OsrmRoute
   */
  geometry: string;
  /**
   * The total cost of the route computed by the routing engine.
   * @type {number}
   * @memberof OsrmRoute
   */
  weight?: number;
  /**
   * The costing model used for the route.
   * @type {string}
   * @memberof OsrmRoute
   */
  weightName?: string;
  /**
   *
   * @type {Array<OsrmRouteLeg>}
   * @memberof OsrmRoute
   */
  legs: Array<OsrmRouteLeg>;
}

/**
 * Check if a given object implements the OsrmRoute interface.
 */
export function instanceOfOsrmRoute(value: object): value is OsrmRoute {
  if (!("distance" in value) || value["distance"] === undefined) return false;
  if (!("duration" in value) || value["duration"] === undefined) return false;
  if (!("geometry" in value) || value["geometry"] === undefined) return false;
  if (!("legs" in value) || value["legs"] === undefined) return false;
  return true;
}

export function OsrmRouteFromJSON(json: any): OsrmRoute {
  return OsrmRouteFromJSONTyped(json, false);
}

export function OsrmRouteFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmRoute {
  if (json == null) {
    return json;
  }
  return {
    distance: json["distance"],
    duration: json["duration"],
    geometry: json["geometry"],
    weight: json["weight"] == null ? undefined : json["weight"],
    weightName: json["weight_name"] == null ? undefined : json["weight_name"],
    legs: (json["legs"] as Array<any>).map(OsrmRouteLegFromJSON),
  };
}

export function OsrmRouteToJSON(json: any): OsrmRoute {
  return OsrmRouteToJSONTyped(json, false);
}

export function OsrmRouteToJSONTyped(
  value?: OsrmRoute | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    distance: value["distance"],
    duration: value["duration"],
    geometry: value["geometry"],
    weight: value["weight"],
    weight_name: value["weightName"],
    legs: (value["legs"] as Array<any>).map(OsrmRouteLegToJSON),
  };
}
