/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.1.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { WofContextComponent } from "./WofContextComponent";
import {
  WofContextComponentFromJSON,
  WofContextComponentFromJSONTyped,
  WofContextComponentToJSON,
  WofContextComponentToJSONTyped,
} from "./WofContextComponent";

/**
 *
 * @export
 * @interface WofContext
 */
export interface WofContext {
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  borough?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  continent?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  country?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  county?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  dependency?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  localadmin?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  locality?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  macrocounty?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  macroregion?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  neighbourhood?: WofContextComponent | null;
  /**
   *
   * @type {WofContextComponent}
   * @memberof WofContext
   */
  region?: WofContextComponent | null;
}

/**
 * Check if a given object implements the WofContext interface.
 */
export function instanceOfWofContext(value: object): value is WofContext {
  return true;
}

export function WofContextFromJSON(json: any): WofContext {
  return WofContextFromJSONTyped(json, false);
}

export function WofContextFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): WofContext {
  if (json == null) {
    return json;
  }
  return {
    borough:
      json["borough"] == null
        ? undefined
        : WofContextComponentFromJSON(json["borough"]),
    continent:
      json["continent"] == null
        ? undefined
        : WofContextComponentFromJSON(json["continent"]),
    country:
      json["country"] == null
        ? undefined
        : WofContextComponentFromJSON(json["country"]),
    county:
      json["county"] == null
        ? undefined
        : WofContextComponentFromJSON(json["county"]),
    dependency:
      json["dependency"] == null
        ? undefined
        : WofContextComponentFromJSON(json["dependency"]),
    localadmin:
      json["localadmin"] == null
        ? undefined
        : WofContextComponentFromJSON(json["localadmin"]),
    locality:
      json["locality"] == null
        ? undefined
        : WofContextComponentFromJSON(json["locality"]),
    macrocounty:
      json["macrocounty"] == null
        ? undefined
        : WofContextComponentFromJSON(json["macrocounty"]),
    macroregion:
      json["macroregion"] == null
        ? undefined
        : WofContextComponentFromJSON(json["macroregion"]),
    neighbourhood:
      json["neighbourhood"] == null
        ? undefined
        : WofContextComponentFromJSON(json["neighbourhood"]),
    region:
      json["region"] == null
        ? undefined
        : WofContextComponentFromJSON(json["region"]),
  };
}

export function WofContextToJSON(json: any): WofContext {
  return WofContextToJSONTyped(json, false);
}

export function WofContextToJSONTyped(
  value?: WofContext | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    borough: WofContextComponentToJSON(value["borough"]),
    continent: WofContextComponentToJSON(value["continent"]),
    country: WofContextComponentToJSON(value["country"]),
    county: WofContextComponentToJSON(value["county"]),
    dependency: WofContextComponentToJSON(value["dependency"]),
    localadmin: WofContextComponentToJSON(value["localadmin"]),
    locality: WofContextComponentToJSON(value["locality"]),
    macrocounty: WofContextComponentToJSON(value["macrocounty"]),
    macroregion: WofContextComponentToJSON(value["macroregion"]),
    neighbourhood: WofContextComponentToJSON(value["neighbourhood"]),
    region: WofContextComponentToJSON(value["region"]),
  };
}
