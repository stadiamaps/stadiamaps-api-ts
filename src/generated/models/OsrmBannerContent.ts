/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 9.3.0
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { OsrmGuidanceModifier } from "./OsrmGuidanceModifier";
import {
  OsrmGuidanceModifierFromJSON,
  OsrmGuidanceModifierFromJSONTyped,
  OsrmGuidanceModifierToJSON,
  OsrmGuidanceModifierToJSONTyped,
} from "./OsrmGuidanceModifier";
import type { OsrmBannerComponent } from "./OsrmBannerComponent";
import {
  OsrmBannerComponentFromJSON,
  OsrmBannerComponentFromJSONTyped,
  OsrmBannerComponentToJSON,
  OsrmBannerComponentToJSONTyped,
} from "./OsrmBannerComponent";

/**
 *
 * @export
 * @interface OsrmBannerContent
 */
export interface OsrmBannerContent {
  /**
   *
   * @type {string}
   * @memberof OsrmBannerContent
   */
  text: string;
  /**
   *
   * @type {string}
   * @memberof OsrmBannerContent
   */
  type?: OsrmBannerContentTypeEnum;
  /**
   *
   * @type {OsrmGuidanceModifier}
   * @memberof OsrmBannerContent
   */
  modifier?: OsrmGuidanceModifier | null;
  /**
   * A list of objects with additional context that allow for visual layout improvements beyond what's possible with plain text.
   * @type {Array<OsrmBannerComponent>}
   * @memberof OsrmBannerContent
   */
  components?: Array<OsrmBannerComponent>;
}

/**
 * @export
 */
export const OsrmBannerContentTypeEnum = {
  Turn: "turn",
  NewName: "new name",
  Depart: "depart",
  Arrive: "arrive",
  Merge: "merge",
  OnRamp: "on ramp",
  OffRamp: "off ramp",
  Fork: "fork",
  EndOfRoad: "end of road",
  Continue: "continue",
  Roundabout: "roundabout",
  Rotary: "rotary",
  RoundaboutTurn: "roundabout turn",
  Notification: "notification",
  ExitRoundabout: "exit roundabout",
  ExitRotary: "exit rotary",
} as const;
export type OsrmBannerContentTypeEnum =
  (typeof OsrmBannerContentTypeEnum)[keyof typeof OsrmBannerContentTypeEnum];

/**
 * Check if a given object implements the OsrmBannerContent interface.
 */
export function instanceOfOsrmBannerContent(
  value: object,
): value is OsrmBannerContent {
  if (!("text" in value) || value["text"] === undefined) return false;
  return true;
}

export function OsrmBannerContentFromJSON(json: any): OsrmBannerContent {
  return OsrmBannerContentFromJSONTyped(json, false);
}

export function OsrmBannerContentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): OsrmBannerContent {
  if (json == null) {
    return json;
  }
  return {
    text: json["text"],
    type: json["type"] == null ? undefined : json["type"],
    modifier:
      json["modifier"] == null
        ? undefined
        : OsrmGuidanceModifierFromJSON(json["modifier"]),
    components:
      json["components"] == null
        ? undefined
        : (json["components"] as Array<any>).map(OsrmBannerComponentFromJSON),
  };
}

export function OsrmBannerContentToJSON(json: any): OsrmBannerContent {
  return OsrmBannerContentToJSONTyped(json, false);
}

export function OsrmBannerContentToJSONTyped(
  value?: OsrmBannerContent | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    text: value["text"],
    type: value["type"],
    modifier: OsrmGuidanceModifierToJSON(value["modifier"]),
    components:
      value["components"] == null
        ? undefined
        : (value["components"] as Array<any>).map(OsrmBannerComponentToJSON),
  };
}
