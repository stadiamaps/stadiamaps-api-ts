/* tslint:disable */
/* eslint-disable */
/**
 * Stadia Maps Geospatial APIs
 * The Stadia Maps Geospatial APIs provide you with the data you need to build awesome applications.
 *
 * The version of the OpenAPI document: 10.0.1
 * Contact: support@stadiamaps.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { GeocodingMeta } from "./GeocodingMeta";
import {
  GeocodingMetaFromJSON,
  GeocodingMetaFromJSONTyped,
  GeocodingMetaToJSON,
  GeocodingMetaToJSONTyped,
} from "./GeocodingMeta";
import type { FeaturePropertiesV2 } from "./FeaturePropertiesV2";
import {
  FeaturePropertiesV2FromJSON,
  FeaturePropertiesV2FromJSONTyped,
  FeaturePropertiesV2ToJSON,
  FeaturePropertiesV2ToJSONTyped,
} from "./FeaturePropertiesV2";

/**
 * The GeoJSON response envelope.
 *
 * This is parameterized over the feature properties type
 * to allow for changes between versions.
 * @export
 * @interface GeocodeResponseEnvelopePropertiesV2
 */
export interface GeocodeResponseEnvelopePropertiesV2 {
  /**
   * The geographic bounding box covering all features in the result set.
   *
   * This is empty for autocomplete results.
   * @type {Array<number>}
   * @memberof GeocodeResponseEnvelopePropertiesV2
   */
  bbox?: Array<number> | null;
  /**
   *
   * @type {Array<FeaturePropertiesV2>}
   * @memberof GeocodeResponseEnvelopePropertiesV2
   */
  features: Array<FeaturePropertiesV2>;
  /**
   *
   * @type {GeocodingMeta}
   * @memberof GeocodeResponseEnvelopePropertiesV2
   */
  geocoding: GeocodingMeta;
  /**
   * The GeoJSON object type as defined in RFC 7946.
   *
   * NOTE: This is always FeatureCollection, as the response envelope is designed to hold multiple results.
   * @type {string}
   * @memberof GeocodeResponseEnvelopePropertiesV2
   */
  type: string;
}

/**
 * Check if a given object implements the GeocodeResponseEnvelopePropertiesV2 interface.
 */
export function instanceOfGeocodeResponseEnvelopePropertiesV2(
  value: object,
): value is GeocodeResponseEnvelopePropertiesV2 {
  if (!("features" in value) || value["features"] === undefined) return false;
  if (!("geocoding" in value) || value["geocoding"] === undefined) return false;
  if (!("type" in value) || value["type"] === undefined) return false;
  return true;
}

export function GeocodeResponseEnvelopePropertiesV2FromJSON(
  json: any,
): GeocodeResponseEnvelopePropertiesV2 {
  return GeocodeResponseEnvelopePropertiesV2FromJSONTyped(json, false);
}

export function GeocodeResponseEnvelopePropertiesV2FromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): GeocodeResponseEnvelopePropertiesV2 {
  if (json == null) {
    return json;
  }
  return {
    bbox: json["bbox"] == null ? undefined : json["bbox"],
    features: (json["features"] as Array<any>).map(FeaturePropertiesV2FromJSON),
    geocoding: GeocodingMetaFromJSON(json["geocoding"]),
    type: json["type"],
  };
}

export function GeocodeResponseEnvelopePropertiesV2ToJSON(
  json: any,
): GeocodeResponseEnvelopePropertiesV2 {
  return GeocodeResponseEnvelopePropertiesV2ToJSONTyped(json, false);
}

export function GeocodeResponseEnvelopePropertiesV2ToJSONTyped(
  value?: GeocodeResponseEnvelopePropertiesV2 | null,
  ignoreDiscriminator: boolean = false,
): any {
  if (value == null) {
    return value;
  }

  return {
    bbox: value["bbox"],
    features: (value["features"] as Array<any>).map(FeaturePropertiesV2ToJSON),
    geocoding: GeocodingMetaToJSON(value["geocoding"]),
    type: value["type"],
  };
}
